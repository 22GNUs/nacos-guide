(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{320:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第5节-nacos中委派设计模式的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第5节-nacos中委派设计模式的使用"}},[t._v("#")]),t._v(" 第5节.Nacos中委派设计模式的使用")]),t._v(" "),a("h2",{attrs:{id:"一、委派设计模式概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、委派设计模式概念"}},[t._v("#")]),t._v(" 一、委派设计模式概念")]),t._v(" "),a("p",[t._v("委派就像是拿另一种方法替代了原本的方法，交给现在这个替代后的方法使用，使用时和原来的方法没有区别。")]),t._v(" "),a("p",[t._v("允许对象组合实现与继承相同的代码重用。它的基本作用就是负责任务的调用和分配任务，是一种特殊的静态代理，可以理解我全权代理，但是代码模式注重过程，而委派模式注重结果。属于行为型模式。")]),t._v(" "),a("h2",{attrs:{id:"二、委派设计模式角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、委派设计模式角色"}},[t._v("#")]),t._v(" 二、委派设计模式角色")]),t._v(" "),a("ol",[a("li",[t._v("抽象任务角色（Task）：定义一个接口，它有若干实现类。")]),t._v(" "),a("li",[t._v("委派角色（Delegate）：负责在各个具体角色实例之间做出决策，屏判断调用具体实现的方法。")]),t._v(" "),a("li",[t._v("具体任务角色（Concrete）真正执行任务的角色")])]),t._v(" "),a("p",[t._v("通常我们看到某个类的名称中包含Delegete字符串，基本上都是一种委派设计模式的体现。类关系如下:")]),t._v(" "),a("p",[t._v("client")]),t._v(" "),a("p",[t._v("调用")]),t._v(" "),a("p",[t._v("Delegate类----------实现-----------任务角色接口")]),t._v(" "),a("p",[t._v("具体任务角色1----------实现-----------任务角色接口")]),t._v(" "),a("p",[t._v("具体任务角色2----------实现-----------任务角色接口")]),t._v(" "),a("h2",{attrs:{id:"三、nacos中委派模式的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、nacos中委派模式的使用"}},[t._v("#")]),t._v(" 三、Nacos中委派模式的使用")]),t._v(" "),a("h3",{attrs:{id:"_1、客户端模块的请求委派处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、客户端模块的请求委派处理"}},[t._v("#")]),t._v(" 1、客户端模块的请求委派处理")]),t._v(" "),a("p",[t._v("以客户端的请求入口NacosNamingService类为起点，在该类的构造函数中对接口NamingClientProxy进行了委派的初始化，代码如下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientProxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NamingClientProxyDelegate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceInfoHolder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" properties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" changeNotifier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("所以角色对应关系如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("角色名称")]),t._v(" "),a("th",[t._v("对应接口/类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("抽象任务角色")]),t._v(" "),a("td",[t._v("NamingClientProxy")])]),t._v(" "),a("tr",[a("td",[t._v("委派角色")]),t._v(" "),a("td",[t._v("NamingClientProxyDelegate")])]),t._v(" "),a("tr",[a("td",[t._v("具体任务角色")]),t._v(" "),a("td",[t._v("NamingHttpClientProxy、NamingGrpcClientProxy")])])])]),t._v(" "),a("p",[t._v("可以了解到NacosNamingService中的客户端请求的业务逻辑设计为委派模式，去根据自己的业务去控制什么时候采用HTTP请求，什么时候采用GRPC请求。")]),t._v(" "),a("p",[t._v("在Nacos2.1版本中：")]),t._v(" "),a("p",[t._v("对于客户端注册服务方法registerService和取消注册服务方法deregisterService的逻辑，采用动态判断，当实例为临时的方式的时候，使用grpcClientProxy，非临时采用httpClientProxy。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NamingClientProxy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecuteClientProxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instance")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEphemeral")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" grpcClientProxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" httpClientProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("对于获得服务列表的方法，采用的grpcClientProxy的方式：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ListView")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServiceList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pageNo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pageSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" groupName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractSelector")]),t._v(" selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NacosException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" grpcClientProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServiceList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageNo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pageSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" groupName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("对于订阅subscribe和取消订阅的方法，采用的也是grpcClientProxy的方式。")]),t._v(" "),a("h3",{attrs:{id:"_2、服务端模块的客户端管理器委派处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、服务端模块的客户端管理器委派处理"}},[t._v("#")]),t._v(" 2、服务端模块的客户端管理器委派处理")]),t._v(" "),a("p",[t._v("以服务端的接收心跳HealthController类为起点，在该类的会判断当前服务器是否支持GRPC的特征，如果是则使用Nacos2中的HealthOperatorV2Impl类进行心跳操作的相关处理，而这个类中需要注入一个ClientManager客户管理期委托实现。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HealthOperatorV2Impl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NamingMetadataManager")]),t._v(" metadataManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClientManagerDelegate")]),t._v(" clientManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClientOperationServiceProxy")]),t._v(" clientOperationService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("metadataManager "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" metadataManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientManager "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientOperationService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientOperationService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("所以角色对应关系如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("角色名称")]),t._v(" "),a("th",[t._v("对应接口/类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("抽象任务角色")]),t._v(" "),a("td",[t._v("ClientManager")])]),t._v(" "),a("tr",[a("td",[t._v("委派角色")]),t._v(" "),a("td",[t._v("ClientManagerDelegate")])]),t._v(" "),a("tr",[a("td",[t._v("具体任务角色")]),t._v(" "),a("td",[t._v("ConnectionBasedClientManager、EphemeralIpPortClientManager、PersistentIpPortClientManager")])])])]),t._v(" "),a("p",[t._v("通过判断客户端的ID信息，委派不同的任务角色进行处理，核心判断逻辑如下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClientManager")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClientManagerById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" clientId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isConnectionBasedClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" connectionBasedClientManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" clientId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClientConstants")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PERSISTENT_SUFFIX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" persistentIpPortClientManager "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ephemeralIpPortClientManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isConnectionBasedClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" clientId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("clientId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IpPortBasedClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID_DELIMITER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3、服务端模块的一致性协议委派处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、服务端模块的一致性协议委派处理"}},[t._v("#")]),t._v(" 3、服务端模块的一致性协议委派处理")]),t._v(" "),a("p",[t._v("Nacos服务端在处理服务一致性协议相关的时候，也采委派模式去选择Distro协议处理业务还是Raft协议处理业务，代码注入如下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Resource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"consistencyDelegate"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConsistencyService")]),t._v(" consistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("所以角色对应关系如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("角色名称")]),t._v(" "),a("th",[t._v("对应接口/类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("抽象任务角色")]),t._v(" "),a("td",[t._v("ConsistencyService")])]),t._v(" "),a("tr",[a("td",[t._v("委派角色")]),t._v(" "),a("td",[t._v("DelegateConsistencyServiceImpl")])]),t._v(" "),a("tr",[a("td",[t._v("具体任务角色")]),t._v(" "),a("td",[t._v("PersistentConsistencyServiceDelegateImpl、EphemeralConsistencyService")])])])]),t._v(" "),a("p",[t._v("可以看到针对持久化协议的设计，本身又是一个内部委派处理方式，代码如下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DependsOn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ProtocolManager"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"consistencyDelegate"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DelegateConsistencyServiceImpl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConsistencyService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersistentConsistencyServiceDelegateImpl")]),t._v(" persistentConsistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EphemeralConsistencyService")]),t._v(" ephemeralConsistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DelegateConsistencyServiceImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersistentConsistencyServiceDelegateImpl")]),t._v(" persistentConsistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EphemeralConsistencyService")]),t._v(" ephemeralConsistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("persistentConsistencyService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" persistentConsistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ephemeralConsistencyService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ephemeralConsistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \t\t\n  \t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Record")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NacosException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapConsistencyService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \t\n  \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  \t* 委派同时满足\n  \t*/")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAvailable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ephemeralConsistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAvailable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" persistentConsistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAvailable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  \t* 委派判断条件\n  \t*/")]),t._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConsistencyService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapConsistencyService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KeyBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matchEphemeralKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" ephemeralConsistencyService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" persistentConsistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在Nacos2.1中，针对持久化协议的委派处理，PersistentConsistencyServiceDelegateImpl，相关角色对应关系如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("角色名称")]),t._v(" "),a("th",[t._v("对应接口/类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("抽象任务角色")]),t._v(" "),a("td",[t._v("PersistentConsistencyService")])]),t._v(" "),a("tr",[a("td",[t._v("委派角色")]),t._v(" "),a("td",[t._v("PersistentConsistencyServiceDelegateImpl")])]),t._v(" "),a("tr",[a("td",[t._v("具体任务角色")]),t._v(" "),a("td",[t._v("RaftConsistencyServiceImpl、BasePersistentServiceProcessor")])])])]),t._v(" "),a("p",[t._v("判断规则如下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersistentConsistencyService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("switchOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" switchNewPersistentService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" newPersistentConsistencyService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" oldPersistentConsistencyService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在Nacos中类似使用委派模式的地方还有很多，可以看到通过该模式，让我们对于任务的分配和委派很清晰。对于我们业务开发其实也是有帮助的，日常业务开发中，多思考下企业对于一些兼容类型的处理或扩展类型的处理都可以用到该模式去处理。")])])}),[],!1,null,null,null);s.default=e.exports}}]);